@startuml strategy

interface PlayStrategy {
    void playTurn(ArenaController arenaController);
}
note right 
Strategy
end note

class ArenaController{
    + void playEnemyTurn();
}
note top
Context
end note

class NormalPlayStrategy{
    + void playTurn(ArenaController arenaController);
}
note bottom
Concrete State
end note

class AggressivePlayStrategy{
    + void playTurn(ArenaController arenaController);
}
class CarefulPlayStrategy{
    + void playTurn(ArenaController arenaController);
}
class GameState {}
hide GameState members

note left
Client
end note

PlayStrategy <-right-o ArenaController

GameState -> ArenaController
GameState -> NormalPlayStrategy
GameState -> CarefulPlayStrategy
GameState -> AggressivePlayStrategy

skinparam groupInheritance 3

NormalPlayStrategy ..|> PlayStrategy
AggressivePlayStrategy..|> PlayStrategy
CarefulPlayStrategy ..|> PlayStrategy
@enduml