@startuml strategy

interface PlayStrategy {
    void playTurn(ArenaController arenaController);
}
note right 
Strategy
end note

class ArenaController{
    + void playEnemyTurn();
}
note top
Context
end note

class NormalPlayStrategy{
    + void playTurn(ArenaController arenaController);
}
class AggressivePlayStrategy{
    + void playTurn(ArenaController arenaController);
}
class CarefulPlayStrategy{
    + void playTurn(ArenaController arenaController);
}
class LevelState {}
hide LevelState members

note left
Client
end note

PlayStrategy <-right-o ArenaController

LevelState -> ArenaController
LevelState -> NormalPlayStrategy
LevelState -> CarefulPlayStrategy
LevelState -> AggressivePlayStrategy

skinparam groupInheritance 3

NormalPlayStrategy ..|> PlayStrategy
AggressivePlayStrategy..|> PlayStrategy
CarefulPlayStrategy ..|> PlayStrategy
@enduml